// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package model

import (
	"strconv"
	"strings"

	"gorm.io/gorm"

	"github.com/99designs/gqlgen/graphql"
	uuid "github.com/satori/go.uuid"
)

type Exam struct {
	UUID          uuid.UUID `gorm:"type:uuid;primary_key;" json:"ID,omitempty"`
	Subject       string    `json:"subject"`
	ModuleName    string    `json:"moduleName"`
	URL           string    `json:"url"`
	ModuleAltName *string   `json:"moduleAltName"`
	Year          *int      `json:"year"`
	Examiners     *string   `json:"examiners"`
	Semester      *string   `json:"semester"`
}

// BeforeCreate will set a UUID rather than numeric ID.
// taken from
// https://github.com/FachschaftMathPhysInfo/ostseee/blob/master/server/go/model_base.go
func (exam *Exam) BeforeCreate(db *gorm.DB) error {
	uuid := uuid.NewV4()
	exam.UUID = uuid
	return nil
}

func (exam *Exam) ToFilename() string {
	filename := strings.ToLower(exam.Subject) + "_" + strings.ToLower(exam.ModuleName)

	if exam.Year != nil && exam.Semester != nil {
		filename += "_" + strings.ToLower(*exam.Semester) + "_" + strconv.Itoa(*exam.Year)
	}

	return filename
}

type NewExam struct {
	Subject       string         `json:"subject"`
	ModuleName    string         `json:"moduleName"`
	File          graphql.Upload `json:"file"`
	ModuleAltName *string        `json:"moduleAltName"`
	Year          *int           `json:"year"`
	Examiners     *string        `json:"examiners"`
	Semester      *string        `json:"semester"`
}
